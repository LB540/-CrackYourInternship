class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        stack<int>st1,st2;
        vector<int>left(n),right(n);
        
        for(int i=0;i<n;i++) {
            left[i]=i;
            right[i]=n-i-1;
        }
        for(int i=0;i<n;i++) {
            while(!st1.empty() && arr[st1.top()]>arr[i]) {
                right[st1.top()] = i-st1.top()-1;
                st1.pop();
            }
            st1.push(i);
        }
        for(int i=n-1;i>=0;i--) {
            while(!st2.empty() && arr[st2.top()]>=arr[i]) {
                left[st2.top()] = st2.top()-i-1;
                st2.pop();
            }
            st2.push(i);
        }
        int ans=0,mod = 1e9+7;
        for(int i=0;i<n;i++) {
            ans = (ans+(long)arr[i]*(left[i]+1)*(right[i]+1))%mod;
            // ans %= mod;
        }
        return ans;
    }
};
